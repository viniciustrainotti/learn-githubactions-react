---
name: cd

'on':
  push:
    branches: [master]
    tags:
      - 'v*.*.*'

jobs:
  ci:
    uses: ./.github/workflows/ci.yaml
  release:
    needs: ['ci']
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-react-${{ env.RELEASE_VERSION }}
      - name: Print the final result
        run: ls -la
      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: react.zip
      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./react.zip
          asset_name: react-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
  deploy:
    needs: ['ci']
    environment: AWS
    name: Continuos Deployment
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-react-${{ env.RELEASE_VERSION }}
      - name: Print the final result
        run: ls -la
      - name: Print the final js result
        run: ls -la static/js
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
          role-session-name: GitHub
          aws-region: us-east-1
      - name: Deploy to S3
        run: aws s3 sync . "s3://${{ secrets.AWS_BUCKET }}/" --delete
      - name: Create invalidation CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
